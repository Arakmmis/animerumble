<div class="w-50">
    <div v-for="(item, index) in source.ally" class="d-flex flex-row game--box">
        <div class="game--char">
            <button @click="onTarget({name: item.name, hero: index})" :disabled="state.button.ally[index].button" class="l--char">
                <img :src="onGetImage({nameId: item.nameId}, 'char')">
            </button>
            <div class="l--turn mt-1">
                <p class="">HP {{item.hp}}</p>
                <div class="l--bar">
                    <div :style="{width: item.hp+'%'}" class="l--hp"></div>
                </div>
            </div>
        </div>
        <div class="d-flex flex-column">
            <div class="d-flex flex-row game--status">
                <div v-for="action in packet">
                    <img :src="onGetImage({offense: action.offense, skill: action.skillId, heroIndex: action.heroIndex}, 'packet')" v-if="action.target.some(x=>x===item.name)">
                </div>
                <div v-for="status in item.indicator" v-if="item.indicator.length !== 0">
                    <v-popover offset="0" placement="bottom-start" trigger="hover">
                        <img :src="onGetImage({nameId: status.nameId, skill: status.skillIndex}, 'status')">
                        <template slot="popover">
                            <% include indicator.ejs %>
                        </template>
                    </v-popover>
                </div>
            </div>
            <div class="d-flex flex-row game--skill-container">
                <div class="game--skill" v-if="source.myTurn === true">
                    <div v-if="packet.some(x => x.offense === item.name)">
                        <button @dblclick="onSkill(targetingCue(item.name))" @click="onDescription(targetingCue(item.name, item.nameId))" class="l--skill">
                            <img :src="onGetImage({nameId: item.nameId, name: item.name},'targeting')">
                        </button>
                    </div>
                    <div v-if="!packet.some(x => x.offense === item.name)">
                        <button class="l--skill-noborder" disabled="true">
                            <img src="/assets/theme/none.jpg">
                        </button>
                    </div>
                </div>
                <div v-for="(skill, skillIndex) in item.skill.slice(0, 4)" class="game--skill">
                    <div v-if="!packet.some(x => x.offense === item.name && x.skillId === skill.id)">
                        <button @click="onSkill({name: item.name, skillIndex: skillIndex, skillId: skill.id, heroIndex: index, target: skill.target}), onDescription({name: item.name, nameId: item.nameId, skillIndex: skillIndex, skillId: skill.id, heroIndex: index, target: skill.target})"
                            :disabled="state.button.ally[index].skill[skillIndex].button" v-if="!state.button.ally[index].skill[skillIndex].button"
                            class="l--skill">
                            <img :src="onGetImage({nameId: item.nameId, skill: skill.id},'skill')">
                        </button>
                        <button @click="onDescription({name: item.name, nameId: item.nameId, skillIndex: skillIndex, skillId: skill.id, heroIndex: index, target: skill.target})"
                            v-if="state.button.ally[index].skill[skillIndex].button" class="l--disabled game--skill-button">
                            <img :src="onGetImage({nameId: item.nameId, skill: skill.id},'skill')">
                            <p class="game--skill-cooldown" v-if="mode==='game'">{{skill.state === 'cooldown' ? skill.counter+1 : ''}}</p>
                        </button>
                    </div>
                    <div v-if="packet.some(x => x.offense === item.name && x.skillId === skill.id)">
                        <button class="l--skill-noborder" disabled="true">
                            <img src="/assets/theme/empty.jpg">
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>