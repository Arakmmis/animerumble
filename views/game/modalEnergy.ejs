<script type="text/x-template" id="modal-energy">
    <transition name="modal">
      <div class="modal-mask">
        <div class="modal-wrapper">
          <div class="modal-container">
  
            <div class="modal-header">
              <slot name="header">
                <p class="title-1">Energy</p>
              </slot>
            </div>    
            
            <div class="modal-body">
              <slot name="body">      
                <p>Reimburse <img src="/assets/energy/energy_random.gif"/> {{reimbursed}} Random Energy</p>
                <p><img src="/assets/energy/energy_0.gif" /> {{pool.a}} <button @click="select('a')" :disabled="disabled('a','select')">+</button><button @click="deselect('a')" :disabled="disabled('a','deselect')">-</button></p>
                <p><img src="/assets/energy/energy_1.gif" /> {{pool.i}} <button @click="select('i')" :disabled="disabled('i','select')">+</button><button @click="deselect('i')" :disabled="disabled('i','deselect')">-</button></p>
                <p><img src="/assets/energy/energy_2.gif" /> {{pool.s}} <button @click="select('s')" :disabled="disabled('s','select')">+</button><button @click="deselect('s')" :disabled="disabled('s','deselect')">-</button></p>
                <p><img src="/assets/energy/energy_3.gif" /> {{pool.w}} <button @click="select('w')" :disabled="disabled('w','select')">+</button><button @click="deselect('w')" :disabled="disabled('w','deselect')">-</button></p>
                
                <draggable v-model="reorder" :options="{group:'people'}" @start="drag=true" @end="drag=false" class="d-flex flex-row">
                  <div v-for="element in reorder" :key="element.id" class="p-1 cursor">
                    <img :src="onGetImage({offense: element.offense, skill: element.skillId},'packet')" class="cursor">
                  </div>
               </draggable>
              </slot>
            </div>
  
            <div class="modal-footer">
              <slot name="footer">                
                <button class="modal-default-button btn-color4 w-100" @click="done()" :disabled="reimbursed !== 0">
                    Accept
                </button>
                <button class="modal-default-button btn-color4 w-100" @click="$emit('close')">
                  Back
                </button>
              </slot>
            </div>
          </div>
        </div>
      </div>
    </transition>
  </script>

<script>
  Vue.component('modalenergy', {
    props: ['energy', 'random', 'packet', 'source'],
    template: '#modal-energy',
    data: function () {
      return {
        drag: false,
        cost: {
          a: 0,
          i: 0,
          s: 0,
          w: 0
        },
        pool: {
          a: this.energy.a,
          i: this.energy.i,
          s: this.energy.s,
          w: this.energy.w
        },
        reorder: this.packet.map((x, i) => {
          return {
            ...x,
            id: i
          }
        }),
        reimbursed: this.random
      }
    },
    methods: {
      select: function (payload) {
        this.pool[payload] -= 1
        this.reimbursed -= 1
      },
      deselect: function (payload) {
        this.pool[payload] += 1
        this.reimbursed += 1
      },
      disabled: function (energy, option) {
        if (option === 'select') {
          return !(this.energy[energy] > 0) || (0 === this.pool[energy]) || this.reimbursed === 0
        } else if (option === 'deselect') {
          return !(this.energy[energy] > 0) || (this.energy[energy] === this.pool[energy])
        }

      },
      done: function () {
        let energy = {
          a: this.energy.a - this.pool.a,
          i: this.energy.i - this.pool.i,
          s: this.energy.s - this.pool.s,
          w: this.energy.w - this.pool.w,
        }
        let packet = this.reorder
        this.$emit('done', {
          energy,
          packet
        })
      },
      onGetImage: function (payload, option) {
        if (option === 'packet') {
          let index = this.source.ally.findIndex(x => x.name === payload.offense)
          let nameId = this.source.ally[index].nameId

          return '/assets/character/' + nameId.slice(0, -1) + '/skill' + (payload.skill + 1) + '/avatar.jpg'
        }
        // else if (option === 'char') {
        //   return '/assets/character/' + payload.nameId + '/avatar.jpg'
        // }
        // else if (option === 'skill') {
        //   return '/assets/character/' + payload.nameId + '/skill' + (payload.skill + 1) + '/avatar.jpg'
        // }
        // else if (option === 'status') {
        //   return '/assets/character/' + payload.nameId + '/skill' + (payload.skill) + '/avatar.jpg'
        // }
      }
    }
  })
</script>